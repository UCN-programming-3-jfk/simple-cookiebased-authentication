@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <img src="/images/cookie.png" style="float:right;width:200px;"/>
    <h1 class="display-4">Welcome to the cookie authentication sample project</h1>
    <p></p>
    <p>To access the private area, you will need to authenticate either by clicking the 'Log in' link in the menu, or by trying to access a controller or action that requires authorization (i.e. the 'private' section). 
    <p></p>
        <p>Learn about <a href="https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie?view=aspnetcore-6.0">ensuring authorized access using cookies in ASP.NET Core MVC</a>.</p>
</div>
<div class="container" style="margin:10px;border:1px solid black;background-color:#eeffff;">
    <div class="row">
        <p>
            <b>Explanation</b>
            <br />The entire HomeController requires authorization, as it has the [Authorize] attribute on the controller.
            <br />The actions 'Index()' and 'Error()' have the [AllowAnonymous] attribute, to allow the front page and errors to be seen by unauthorized users.
            <br />The action ''AdminsOnly()' has the added requirement that the authentication model must have a role claim with the value 'Administrator'. Bob is only 'User', so he can't get access.
        <p>
            <pre style="font-family:monospace;color:navy;font-weight:bold">
    [Authorize]
    public class HomeController
    {
        [AllowAnonymous]                    
        public IActionResult Index() {...}      //open to unauthenticated users
    
        [AllowAnonymous]                    
        public IActionResult Error() {...}      //open to unauthenticated users
    
        public IActionResult Private() {...}    //for authenticated users only
    
        [Authorize(Roles = "Administrator")]    //for authenticated admins only
        public IActionResult AdminsOnly() {...}
    }
</pre>
        </p>
    </div>
</div>
